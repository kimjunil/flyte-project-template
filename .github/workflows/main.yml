name: Docker Build & Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3
      
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "short_sha=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - uses: docker/build-push-action@v3.1.0
        with:
          file: ./Dockerfile
          tags: qraftaxe/${{ github.event.repository.name }}:${{ env.short_sha }}
          push: true
          
    outputs:
      image_tag: qraftaxe/${{ github.event.repository.name }}:${{ env.short_sha }}
      short_sha: ${{ env.short_sha }}
    
  push-to-flyte:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3
        
      - name: Install flytectl
        run: |
          curl -sL https://ctl.flyte.org/install | bash 
          echo '${{ secrets.FLYTE_CLIENT_SECRET }}' >> /tmp/flyte_admin_secret
          yq e --inplace '.admin.endpoint = "${{ secrets.FLYTE_ENDPOINT }}"' flyte_config.yaml
          yq e --inplace '.admin.authType = "ClientSecret"' flyte_config.yaml
          yq e --inplace '.admin.clientId = "${{ secrets.FLYTE_CLIENT_ID }}"' flyte_config.yaml
          yq e --inplace '.admin.clientSecretLocation = "/tmp/flyte_admin_secret"' flyte_config.yaml
          cat flyte_config.yaml     
          
      - name: Serialize project
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install wheel
          pip install -r requirements.txt
          mkdir _pb_output
          pyflyte -c flyte_config.yaml --pkgs project.train serialize --image ${{ steps.docker-build-and-push.outputs.image_tag }} workflows -f _pb_output/
      - name: Registar serialized project
        run: |
          ./bin/flytectl register files _pb_output/* -c flyte_config.yaml -p flytesnacks -d development --version ${{ steps.docker-build-and-push.outputs.short_sha }}
           
      - name: Generate execution spec file
        run: |
          ./bin/flytectl get launchplan -c flyte_config.yaml -p flytesnacks -d development --version ${{ steps.docker-build-and-push.outputs.short_sha }} project.train.train_workflow --execFile execution_spec.yaml
        
      - name: Create workflow execution
        run: ./bin/flytectl create execution -c flyte_config.yaml -p flytesnacks -d development --version ${{ steps.docker-build-and-push.outputs.short_sha }} --execFile execution_spec.yaml
