name: Push to Flyte

on:
  workflow_dispatch:
  
jobs:

  push-to-flyte:
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3
      
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "short_sha=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV
        
      - name: Install flytectl
        run: |
          curl -sL https://ctl.flyte.org/install | bash
          ./bin/flytectl config init --host=${{ secrets.FLYTE_ENDPOINT }}
          cat /home/runner/.flyte/config.yaml          
          
      - name: Serialize project
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install wheel
          pip install -r requirements.txt
          cd project
          mkdir _pb_output
          pyflyte -c /home/runner/.flyte/config.yaml --pkgs train serialize --image qraftaxe/flyte-project-template:46781260 workflows -f _pb_output/
          
      - name: flytectl config init
        run: |
          ./bin/flytectl config init --host=${{ secrets.FLYTE_ENDPOINT }}        
          yq e --inplace '.admin.clientId = "${{ secrets.FLYTE_CLIENT_ID }}"' /home/runner/.flyte/config.yaml 
          ./bin/flytectl config --file /home/runner/.flyte/config.yaml 

#       - name: Get Keycloak token
#         run: |
#           echo "keycloak_access_token=`curl -L -X POST '${{ secrets.KEYCLOAK_ENDPOINT }}' \
#           -H 'Content-Type: application/x-www-form-urlencoded' \
#           --data-urlencode 'client_id=${{ secrets.KEYCLOAK_CLIENT_ID }}' \
#           --data-urlencode 'grant_type=password' \
#           --data-urlencode 'client_secret=${{ secrets.KEYCLOAK_CLIENT_SECRET }}' \
#           --data-urlencode 'scope=openid' \
#           --data-urlencode 'username=${{ secrets.KEYCLOAK_USERNAME }}' \
#           --data-urlencode 'password=${{ secrets.KEYCLOAK_PASSWORD }}' | jq '.access_token'`" >> $GITHUB_ENV

      - name: Registar serialized project
        run: ./bin/flytectl register files _pb_output/* -p flytesnacks -d development --version ${{ env.short_sha }} --admin.insecureSkipVerify true
           
      - name: Generate execution spec file
        run: ./bin/flytectl get launchplan -p flytesnacks -d development --version ${{ env.short_sha }} project.train.train_workflow --execFile execution_spec.yaml --admin.insecureSkipVerify true
        
      - name: Create workflow execution
        run: ./bin/flytectl create execution -p flytesnacks -d development --version ${{ env.short_sha }} --execFile execution_spec.yaml --admin.insecureSkipVerify true
